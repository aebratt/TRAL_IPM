

  
    model {
    #-------------------------------------------------
    # integrated population model for the Gough TRAL population
    # - age structured model with 10 age classes 
    # - adult survival based on CMR ringing data
    # - pre breeding census, female-based assuming equal sex ratio & survival
    # - productivity based on all areas incu and chick counts
    # - simplified population process with assumed age at recruiting = 10 (Wanless et al. 2009)
    # - adult breeders skipping when unsuccessful at rate of 22-32%, all successful breeders will skip
    # - linked population process with SUM OF count data
    # - v4 includes 3 scenarios of future projection: no change, improved fecundity, reduced adult survival
    # - marray_v1 uses marray for survival estimation to speed up computation time
    # - marray_simplified adjusts population process to make number of bird returning completely random
    # - marray_simplified_v2 further simplifies return process to tie to recapture probability
    # - marray_simplified_v3 includes carrying capacity for future projections and re-inserts breeding success
    # -------------------------------------------------
    
    #-------------------------------------------------  
    # 1. PRIORS FOR ALL DATA SETS
    #-------------------------------------------------
    
    
    # -------------------------------------------------        
    # 1.1. Priors and constraints FOR FECUNDITY
    # -------------------------------------------------
    
    for (t in 1:T){  
      ann.fec[t] ~ dunif(0.05,0.65) ## dnorm(0.32,10) T(0.001,0.999)        ## Informative Priors on fecundity based on Wanless et al 2009
      #skip.prob[t] ~ dunif(0.05,0.95) ## dunif(0.22,0.32) T(0.001,0.999)           ## PRIOR FOR ADULT FAILED BREEDER SKIPPING PROBABILITY from Wanless et al 2009
    } #t

    
    # -------------------------------------------------        
    # 1.2. Priors and constraints FOR POPULATION COUNTS
    # -------------------------------------------------
    for (s in 1:n.sites){			### start loop over every study area
      for (t in 1:T){			### start loop over every year
        sigma.obs[s,t] ~ dunif(0,10)	#Prior for SD of observation process (variation in detectability)
        tau.obs[s,t]<-pow(sigma.obs[s,t],-2)
      }
    }


    # -------------------------------------------------        
    # 1.3. Priors and constraints FOR SURVIVAL
    # -------------------------------------------------
    
    ### RECAPTURE PROBABILITY
    mean.p.juv ~ dunif(0.2, 1)	           # Prior for mean juvenile recapture - should be higher than 20% if they survive!
    mean.p.ad ~ dunif(0.2, 1)	           # Prior for mean adult recapture - should be higher than 20%
    mu.p.juv <- log(mean.p.juv / (1-mean.p.juv)) # Logit transformation
    mu.p.ad <- log(mean.p.ad / (1-mean.p.ad)) # Logit transformation

    ## PRIORS FOR RANDOM EFFECTS
    sigma.p ~ dunif(0, 1)                # Prior for standard deviation
    tau.p <- pow(sigma.p, -2)

    
    ### SURVIVAL PROBABILITY
    mean.phi.juv ~ dunif(0.5, 0.9)             # Prior for mean juvenile survival first year 0.757, second year 0.973 in Laysan albatross
    mean.phi.ad ~ dunif(0.7, 1)             # Prior for mean adult survival - should be higher than 70%
    mu.juv <- log(mean.phi.juv / (1-mean.phi.juv)) # Logit transformation
    mu.ad <- log(mean.phi.ad / (1-mean.phi.ad)) # Logit transformation

    ## PRIORS FOR RANDOM EFFECTS
    sigma.phi ~ dunif(0, 1)                # Prior for standard deviation
    tau.phi <- pow(sigma.phi, -2)
    
    ## RANDOM TIME EFFECT ON SURVIVAL ONLY FOR ADULTS (age group = 2)
    for (t in 1:(n.occasions-1)){
      logit(phi.juv[t]) <- mu.juv + eps.phi[t]
      logit(phi.ad[t]) <- mu.ad + eps.phi[t]
      eps.phi[t] ~ dnorm(0, tau.phi)
    }
    for (t in 1:(n.occasions)){
      logit(p.ad[t])  <- mu.p.ad + eps.p[t]
      logit(p.juv[t])  <- mu.p.juv + eps.p[t]
      eps.p[t] ~ dnorm(0, tau.p) 
    }


    #-------------------------------------------------  
    # 2. LIKELIHOODS AND ECOLOGICAL STATE MODEL
    #-------------------------------------------------
    
    # -------------------------------------------------        
    # 2.1. System process: female based matrix model
    # -------------------------------------------------
    
    for (tt in 2:T){
    
      ## THE PRE-BREEDING YEARS ##
    
      nestlings[tt] <- ann.fec[tt] * 0.5 * Ntot.breed[tt]                                                     ### number of locally produced FEMALE chicks
      JUV[tt] ~ dpois(nestlings[tt])                                                                     ### need a discrete number otherwise dbin will fail, dpois must be >0
      N1[tt]  ~ dbin(mean.phi.juv, round(JUV[tt-1]))                                                    ### number of 1-year old survivors 
      N2[tt] ~ dbin(mean.phi.juv, round(N1[tt-1]))                                                      ### number of 2-year old survivors
      N3[tt] ~ dbin(mean.phi.juv, round(N2[tt-1]))                                                       ### number of 3-year old survivors
      N4[tt] ~ dbin(mean.phi.juv, round(N3[tt-1]))                                                       ### number of 4-year old survivors
      N.notrecruited.surv[tt] ~ dbin(phi.ad[tt+25], round(N.notrecruited[tt-1]))                        ### number of older immature survivors that have not recruited 
      N.recruits[tt] ~ dbin(p.juv[tt+26], round(N.notrecruited.surv[tt]+N4[tt]))                             ### number of this years recruiters
      N.notrecruited[tt] <-round(N.notrecruited.surv[tt]+N4[tt]-N.recruits[tt])                         ### number of birds not yet recruited at the end of this year
 
      ## THE BREEDING POPULATION ##
      # Ntot.breed comprised of first-time breeders, previous skippers, and previous unsuccessful breeders
      # simplified in simplified_v2 to just adult survivors with p.ad as proportion returning
      #N.prev.succ[tt] ~ dbin(ann.fec[tt-1], round(Ntot.breed[tt-1]))                    ### number of successful breeders from previous year
      #N.prev.succ.atsea[tt] ~ dbin(phi.ad[tt+25], N.prev.succ[tt])                     ### previous year's successful breeders at sea
      #N.prev.unsucc.breed[tt] <- round(Ntot.breed[tt-1]-N.prev.succ[tt])
      #N.prev.unsucc.return[tt] ~ dbin(skip.prob[tt], N.prev.unsucc.breed[tt])             ### previous year's unsuccessful breeders that are returning to breed
      #N.prev.unsucc.atsea[tt] ~ dbin(phi.ad[tt+25], (N.prev.unsucc.breed[tt]-N.prev.unsucc.return[tt])) ### previous year's unsuccessful breeders that are staying at sea
      #N.breed.ready[tt]<- round(N.prev.unsucc.return[tt]+ N.prev.unsucc.atsea[tt-1]+N.prev.succ.atsea[tt-1]+N.recruits[tt-1])       ### number of available breeders is failed breeders from previous year plus failed and successful breeders from 2 years ago plus recruits (N9)
      #Ntot.breed[tt] ~ dbin(phi.ad[tt+25], N.breed.ready[tt])                         ### number of potential old breeders is the number of survivors from previous year breeders and nonbreeders
      
      N.ad.surv[tt] ~ dbin(phi.ad[tt+25], round(Ntot.breed[tt-1]+N.atsea[tt-1]))           ### previous year's adults that survive
      N.breed.ready[tt] ~ dbin(p.ad[tt+26], N.ad.surv[tt])                  ### number of available breeders is proportion of survivors that returns
      Ntot.breed[tt]<- round(N.breed.ready[tt]+N.recruits[tt])              ### number of counted breeders is sum of old breeders returning and first recruits
      N.atsea[tt] <- round(N.ad.surv[tt]-N.breed.ready[tt])                     ### potential breeders that remain at sea    

    } # tt
    
    
    
    ### INITIAL VALUES FOR COMPONENTS FOR YEAR 1 - based on deterministic multiplications
    ## ADJUSTED BASED ON PAST POPULATION SIZES
    Ntot.breed[1] ~ dunif(1500,2000) ###   ### sum of counts is 2400, but we take average over 3 years because 2001 was an outlier year
    JUV[1]<-round(Ntot.breed[1]*0.5*ann.fec[1])
    N1[1] ~ dunif(200,700)  ##<-round(JUV[1]*mean.phi.juv)
    N2[1] ~ dunif(100,600)  ##<-round(N1[1]*mean.phi.juv)
    N3[1] ~ dunif(300,800)  ## very large number of birds due to 2400 breeders in 2001 <-round(N2[1]*mean.phi.juv)
    N4[1] ~ dunif(100,400)  ##<-round(N3[1]*mean.phi.juv)
    N.notrecruited[1] ~ dunif(50,800)  ### all birds not recruited, including those from 1999 bumper year <-round(N4[1]*mean.phi.juv*0.9)                         ### number of birds not yet recruited ~90% at age 4
    
    #N.prev.unsucc.atsea[1] ~ dunif(200,700)
    #N.prev.succ.atsea[1] ~ dunif(300,600)
    N.atsea[1] ~ dunif(100,1000)

    # -------------------------------------------------        
    # 2.2. Observation process for population counts: state-space model of annual counts
    # -------------------------------------------------
    
    for (s in 1:n.sites){			### start loop over every study area
    
      ## Observation process
    
      for (t in 1:T){
        y.count[t,s] ~ dnorm(Ntot.breed[t]*prop.sites[s], tau.obs[s,t])								# Distribution for random error in observed numbers (counts)
      }														# run this loop over t= nyears
    }		## end site loop

    
    # -------------------------------------------------        
    # 2.3. Likelihood for fecundity: Logistic regression from the number of surveyed broods
    # -------------------------------------------------
    # for (s in 1:n.sites){			### start loop over every study area
    #   for (t in 1:(T-1)){
    #     J[t,s] ~ dpois(rho.fec[t,s])
    #     rho.fec[t,s] <- y.count[t,s]*ann.fec[t]
    #   } #	close loop over every year in which we have fecundity data
    # }		## end site loop
    for (t in 1:(T)){
      J[t] ~ dbin(ann.fec[t], R[t])
    } #	close loop over every year in which we have fecundity data
    
    
    
    # -------------------------------------------------        
    # 2.4. Likelihood for adult and juvenile survival from CMR
    # -------------------------------------------------
    
    # Define the multinomial likelihood
    for (t in 1:(n.occasions-1)){
      marr.j[t,1:n.occasions] ~ dmulti(pr.j[t,], r.j[t])
      marr.a[t,1:n.occasions] ~ dmulti(pr.a[t,], r.a[t])
    }
    
    
    # Define the cell probabilities of the m-arrays
    # Main diagonal
    for (t in 1:(n.occasions-1)){
      q.juv[t] <- 1-p.juv[t]            # Probability of non-recapture
      q.ad[t] <- 1-p.ad[t]            # Probability of non-recapture
      pr.j[t,t] <- phi.juv[t]*p.juv[t]
      pr.a[t,t] <- phi.ad[t]*p.ad[t]
    
      # Above main diagonal
      for (j in (t+1):(n.occasions-1)){
        pr.j[t,j] <- phi.juv[t]*prod(phi.ad[(t+1):j])*prod(q.juv[t:(j-1)])*p.juv[j]
        pr.a[t,j] <- prod(phi.ad[t:j])*prod(q.ad[t:(j-1)])*p.ad[j]
      } #j
    
      # Below main diagonal
      for (j in 1:(t-1)){
        pr.j[t,j] <- 0
        pr.a[t,j] <- 0
      } #j
    } #t

  # Last column: probability of non-recapture
  for (t in 1:(n.occasions-1)){
    pr.j[t,n.occasions] <- 1-sum(pr.j[t,1:(n.occasions-1)])
    pr.a[t,n.occasions] <- 1-sum(pr.a[t,1:(n.occasions-1)])
  } #t

    
    #-------------------------------------------------  
    # 3. DERIVED PARAMETERS FOR OUTPUT REPORTING
    #-------------------------------------------------
    

    ## DERIVED POPULATION GROWTH RATE PER YEAR
    for (t in 1:(T-1)){
      lambda[t]<-Ntot.breed[t+1]/max(1,Ntot.breed[t])  ## division by 0 creates invalid parent value
    }		## end year loop
    

    ## DERIVED MEAN FECUNDITY 
    mean.fec <- mean(ann.fec)
    pop.growth.rate <- exp((1/(T-1))*sum(log(lambda[1:(T-1)])))   # Geometric mean


    #-------------------------------------------------  
    # 4. PROJECTION INTO FUTURE
    #-------------------------------------------------
    ## includes 3 scenarios
    ## scenario 1: projection with no changes in demography
    ## scenario 2: successful mouse eradication in 2021 - fecundity doubles
    ## scenario 3: increasing mouse impacts on adult survival (adult survival decreases by 10%)


for(scen in 1:n.scenarios){


    ### COPY POPULATIONS FROM LAST YEAR OF DATA SERIES

    nestlings.f[scen,1] <- round(fut.fec.change[scen]*mean.fec* 0.5 * Ntot.breed[T])                                             ### number of locally produced FEMALE chicks based on average fecundity - to use just one take ann.fec[FUT.int[tt]] 
    N1.f[scen,1]  ~ dbin(mean.phi.juv, max(1,round(nestlings[T])))                                                    ### number of 1-year old survivors 
    N2.f[scen,1] ~ dbin(mean.phi.juv, max(1,round(N1[T])))                                                      ### number of 2-year old survivors
    N3.f[scen,1] ~ dbin(mean.phi.juv, max(1,round(N2[T])))                                                       ### number of 3-year old survivors
    N4.f[scen,1] ~ dbin(mean.phi.juv, max(1,round(N3[T])))                                                       ### number of 4-year old survivors
    N.notrecruited.surv.f[scen,1] ~ dbin(fut.surv.change[scen]*mean.phi.ad, round(N.notrecruited[T]))                        ### number of older immature survivors that have not recruited 
    N.recruits.f[scen,1] ~ dbin(mean.p.juv, round(N.notrecruited.surv.f[scen,1]+N4.f[scen,1]))                             ### number of this years recruiters
    N.notrecruited.f[scen,1] <-round(N.notrecruited.surv.f[scen,1]+N4.f[scen,1]-N.recruits.f[scen,1])                         ### number of birds not yet recruited at the end of this year

    N.ad.surv.f[scen,1] ~ dbin(fut.surv.change[scen]*mean.phi.ad, round(Ntot.breed[T]+N.atsea[T]))           ### previous year's adults that survive
    N.breed.ready.f[scen,1] ~ dbin(p.ad[T+26], round(N.ad.surv.f[scen,1]))                  ### number of available breeders is proportion of survivors that returns, with fecundity INCLUDED in return probability
    Ntot.breed.f[scen,1]<- round(N.breed.ready.f[scen,1]+N.recruits.f[scen,1])              ### number of counted breeders is sum of old breeders returning and first recruits
    N.atsea.f[scen,1] <- round(N.ad.surv.f[scen,1]-N.breed.ready.f[scen,1])                     ### potential breeders that remain at sea
    N.succ.breed.f[scen,1] ~ dbin(fut.fec.change[scen]*mean.fec, round(Ntot.breed.f[scen,1]))                  ### these birds will  remain at sea because tey bred successfully
      

   
    for (tt in 2:FUT.YEAR){
    

    # -------------------------------------------------        
    # 4.1. System process for future
    # -------------------------------------------------

    ## INCLUDE CARRYING CAPACITY OF 2500 breeding pairs (slightly more than maximum ever counted)
    carr.capacity[scen,tt] ~ dnorm(2500,10)
    
    ## THE PRE-BREEDING YEARS ##
    ## because it goes for 30 years, all pops must be safeguarded to not become 0 because that leads to invald parent error
    
    nestlings.f[scen,tt] <- round(fut.fec.change[scen]*mean.fec* 0.5 * Ntot.breed.f[scen,tt])                       ### number of locally produced FEMALE chicks based on average fecundity - to use just one take ann.fec[FUT.int[tt]] 
    N1.f[scen,tt]  ~ dbin(mean.phi.juv, max(1,round(nestlings.f[scen,tt-1])))                                              ### number of 1-year old survivors 
    N2.f[scen,tt] ~ dbin(mean.phi.juv, max(1,round(N1.f[scen,tt-1])))                                                      ### number of 2-year old survivors
    N3.f[scen,tt] ~ dbin(mean.phi.juv, max(1,round(N2.f[scen,tt-1])))                                                       ### number of 3-year old survivors
    N4.f[scen,tt] ~ dbin(mean.phi.juv, max(1,round(N3.f[scen,tt-1])))                                                       ### number of 4-year old survivors
    N.notrecruited.surv.f[scen,tt] ~ dbin(fut.surv.change[scen]*mean.phi.ad, round(N.notrecruited.f[scen,tt-1]))                        ### number of older immature survivors that have not recruited 
    N.recruits.f[scen,tt] ~ dbin(mean.p.juv, round(N.notrecruited.surv.f[scen,tt]+N4.f[scen,tt]))                             ### number of this years recruiters
    N.notrecruited.f[scen,tt] <-round(N.notrecruited.surv.f[scen,tt]+N4.f[scen,tt]-N.recruits.f[scen,tt])                         ### number of birds not yet recruited at the end of this year

    ## THE BREEDING POPULATION ##
      N.ad.surv.f[scen,tt] ~ dbin(fut.surv.change[scen]*mean.phi.ad, round((Ntot.breed.f[scen,tt-1]-N.succ.breed.f[scen,tt-1])+N.atsea.f[scen,tt-1]))           ### previous year's adults that survive
      N.prev.succ.f[scen,tt] ~ dbin(fut.surv.change[scen]*mean.phi.ad, round(N.succ.breed.f[scen,tt-1]))                  ### these birds will  remain at sea because tey bred successfully
      N.breed.ready.f[scen,tt] ~ dbin(mean.p.ad/(1-mean.fec), round(N.ad.surv.f[scen,tt]))                  ### number of available breeders is proportion of survivors that returns, with fecundity partialled out of return probability
      Ntot.breed.f[scen,tt]<- min(carr.capacity[scen,tt],round(N.breed.ready.f[scen,tt]+N.recruits.f[scen,tt]))              ### number of counted breeders is sum of old breeders returning and first recruits
      N.succ.breed.f[scen,tt] ~ dbin(fut.fec.change[scen]*mean.fec, round(Ntot.breed.f[scen,tt]))                  ### these birds will  remain at sea because tey bred successfully
      N.atsea.f[scen,tt] <- round(N.ad.surv.f[scen,tt]-N.breed.ready.f[scen,tt]+N.prev.succ.f[scen,tt])                     ### potential breeders that remain at sea    



    } ### end future loop
    
    ## CALCULATE ANNUAL POP GROWTH RATE ##
      for (fut2 in 1:(FUT.YEAR-1)){
        fut.lambda[scen,fut2] <- Ntot.breed.f[scen,fut2+1]/max(1,Ntot.breed.f[scen,fut2])                                 ### inserted safety to prevent denominator being 0
      } # fut2
    

    ## DERIVED MEAN FUTURE GROWTH RATE 
    fut.growth.rate[scen] <- exp((1/(FUT.YEAR-1))*sum(log(fut.lambda[scen,1:(FUT.YEAR-1)])))   # Geometric mean

} # end future projection scenarios
    
}  ## end model loop

